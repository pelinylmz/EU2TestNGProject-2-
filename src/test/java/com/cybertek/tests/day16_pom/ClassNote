Page Object Model
Page Object Model --> this is a design pattern that enhances the use of maintenance and reusability.
It is a class that mirrors the behavior and objects(Web elements) of a webpage from the app.
In page object model we create classes that serve as an object repository.
How to create Pom ?
Create a new package
1.Right click on cybertek
2.new -> package
3.Enter name: pages
4.OK
Create page object class for login page
1.Right click on pages package
2.New-> Class
3.Enter name: LoginPage
4.OK
Page Object Model vs PageFactory
Page Object model --> design pattern in selenium
PageFactory --> is class in selenium using which we can create page object model.
@FindBy --> annpation from selenium, used to provide locator for the element
@FindAll--> gives us option to use multiple locators, if at least one of them is matching it will find the webElement

@FindAll({
            @FindBy(id = "prependedInput"),
            @FindBy(name = "_username")
    })
@FindBys --> if all locators are matching with element then it will return it. AND logic applies here.
@FindBys({
            @FindBy(id = "prependedInput"),
            @FindBy(name = "_username")
    })
=============================
BasePage --> will contain elements and functionalities that are common or other pages.
All other pages that have those functionalities will extend BasePage.
=============================
Test case
Open browser
Login as a Driver
Verify that page subtitle is Quick Launchpad
Go to Activities -> Calendar Events
verify that page subtitle is Calendar Events
